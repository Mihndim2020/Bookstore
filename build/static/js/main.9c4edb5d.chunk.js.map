{"version":3,"sources":["features/components/NavBar.js","features/components/BookInfo.js","features/components/BookActions.js","features/components/BookStatus.js","features/components/BookProgress.js","features/components/Book.js","features/components/AddBook.js","features/components/BookCategories.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","to","BookInfo","category","name","author","BookActions","href","BookCompletionStatus","percentage","BookProgress","chapter","type","Book","info","BookStatus","AddBook","placeholder","id","defaultValue","value","BookCategories","booksInfo","App","bookList","map","bookInfo","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c4edb5d.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Link,\n} from 'react-router-dom';\n\nconst NavBar = () => (\n  <>\n    <div className=\"title-navbar\">\n      <h1 className=\"title-h1\">Bookstore CMS</h1>\n      <nav className=\"nav-links\">\n        <ul>\n          <li>\n            <Link to=\"/\">BOOKS</Link>\n          </li>\n          <li>\n            <Link to=\"/categories\">CATEGORIES</Link>\n          </li>\n        </ul>\n      </nav>\n    </div>\n    <span><i /></span>\n  </>\n);\n\nexport default NavBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BookInfo = ({ category, name, author }) => (\n  <div>\n    <p className=\"book-category\">{category}</p>\n    <p className=\"book-name\">{name}</p>\n    <p className=\"book-author\">{author}</p>\n  </div>\n);\n\nBookInfo.propTypes = {\n  category: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n};\n\nexport default BookInfo;","import React from 'react';\n\nconst BookActions = () => (\n  <div className=\"book-actions\">\n    <a href=\"/#\">Comments</a>\n    {' | '}\n    <a href=\"/#\">Remove</a>\n    {' | '}\n    <a href=\"/#\">Edit</a>\n  </div>\n);\n\nexport default BookActions;","\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BookCompletionStatus = ({ percentage }) => (\n  <div className=\"book-completion-status\">\n    <i />\n    <p className=\"completion-percentage\">{percentage}</p>\n    <p>Completed</p>\n  </div>\n);\n\nBookCompletionStatus.propTypes = {\n  percentage: PropTypes.string.isRequired,\n};\n\nexport default BookCompletionStatus;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BookProgress = ({ chapter }) => (\n  <div className=\"book-progress\">\n    <p>CURRENT CHAPTER</p>\n    <p className=\"book-progress-chapter\">{chapter}</p>\n    <button type=\"button\">UPDATE PROGRESS</button>\n  </div>\n);\n\nBookProgress.propTypes = {\n  chapter: PropTypes.string.isRequired,\n};\n\nexport default BookProgress;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport BookInfo from './BookInfo';\nimport BookActions from './BookActions';\nimport BookStatus from './BookStatus';\nimport BookProgress from './BookProgress';\n\nconst Book = ({ info }) => (\n  <div className=\"book-row\">\n    <div className=\"book-first-column\">\n      <BookInfo category={info.category} name={info.name} author={info.author} />\n      <BookActions />\n    </div>\n    <div className=\"book-remaining-column\">\n      <BookStatus percentage={info.percentage} />\n      <BookProgress chapter={info.chapter} />\n    </div>\n  </div>\n);\n\nBook.propTypes = {\n  info: PropTypes.shape({\n    id: PropTypes.number,\n    category: PropTypes.string,\n    name: PropTypes.string,\n    author: PropTypes.string,\n    percentage: PropTypes.string,\n    chapter: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Book;","import React from 'react';\n\nconst AddBook  = () => (\n  <>\n    <h2>ADD NEW BOOK</h2>\n    <div className=\"add-book-form\">\n      <input className=\"book-input\" placeholder=\"Book title\" />\n      <select className=\"category-select\" name=\"categories\" id=\"categories\">\n        <option defaultValue=\"\">Category</option>\n        <option value=\"action\">Action</option>\n        <option value=\"science-fiction\">Science Fiction</option>\n        <option value=\"economy\">Economy</option>\n      </select>\n      <input className=\"add-book-button\" type=\"submit\" value=\"ADD BOOK\" />\n    </div>\n  </>\n);\n\nexport default AddBook;","import React from 'react';\n\nconst BookCategories = () => (\n  <h2>Under construction</h2>\n);\n\nexport default BookCategories;","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport NavBar from './features/components/NavBar';\nimport Book from './features/components/Book';\nimport AddBook from './features/components/AddBook';\nimport BookCategories from './features/components/BookCategories';\n\nconst booksInfo = [\n  {\n    id: 1,\n    category: 'Action',\n    name: 'The Hunger Games',\n    author: 'Suzanne Collins',\n    percentage: '64%',\n    chapter: 'Chapter 17',\n  },\n  {\n    id: 2,\n    category: 'Science Fiction',\n    name: 'Dune',\n    author: 'Frank Herbert',\n    percentage: '8%',\n    chapter: 'Chapter 3: \"A Lesson Learned\"',\n  },\n  {\n    id: 3,\n    category: 'Economy',\n    name: 'Capital in the Twenty-First Century',\n    author: 'Suzanne Collins',\n    percentage: '0%',\n    chapter: 'Introduction',\n  },\n];\n\nconst App = () => {\n  const bookList = booksInfo.map((bookInfo) => <Book key={bookInfo.id} info={bookInfo} />);\n  return (\n    <Router>\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\">\n          { bookList }\n          <AddBook />\n        </Route>\n        <Route path=\"/categories\">\n          <BookCategories />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}
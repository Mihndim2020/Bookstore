{"version":3,"sources":["features/components/NavBar.js","features/components/BookInfo.js","features/redux/books/books.js","features/components/BookActions.js","features/components/BookStatus.js","features/components/BookProgress.js","features/components/Book.js","features/redux/books/bookStore.js","features/components/AddBook.js","features/components/BookCategories.js","features/redux/configureStore.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","to","BookInfo","title","author","category","ADD_BOOK","REMOVE_BOOK","initialState","reducer","state","action","type","payload","filter","book","id","BookActions","dispatch","useDispatch","href","onClick","BookStatus","BookProgress","Book","BookStore","bookComponent","useSelector","store","booksReducer","map","AddBook","useState","bookCategory","setBookCategory","bookTitle","setBookTitle","bookAuthor","setBookAuthor","onSubmit","e","preventDefault","newBook","uuidv4","name","placeholder","value","onChange","target","defaultValue","BookCategories","combineReducers","createStore","applyMiddleware","logger","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01b6e0f5.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Link,\n} from 'react-router-dom';\n\nconst NavBar = () => (\n  <>\n    <div className=\"title-navbar\">\n      <h1 className=\"title-h1\">Bookstore CMS</h1>\n      <nav className=\"nav-links\">\n        <ul>\n          <li>\n            <Link to=\"/\">BOOKS</Link>\n          </li>\n          <li>\n            <Link to=\"/categories\">CATEGORIES</Link>\n          </li>\n        </ul>\n      </nav>\n    </div>\n    <span><i /></span>\n  </>\n);\n\nexport default NavBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BookInfo = ({ title, author, category }) => (\n  <div>\n    <p className=\"book-category\">{category}</p>\n    <p className=\"book-title\">{title}</p>\n    <p className=\"book-author\">{author}</p>\n  </div>\n);\n\nBookInfo.propTypes = {\n  title: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n};\n\nexport default BookInfo;","// Action types\n\nconst ADD_BOOK = 'bookStore/books/ADD_BOOK';\nconst REMOVE_BOOK = 'bookStore/books/REMOVE_BOOK';\n\n// Initial state\n\nconst initialState = [];\n\n// Action Creators\n\nexport const addBook = payload => ({\n  type: ADD_BOOK,\n  payload,\n});\n\nexport const removeBook = payload => ({\n  type: REMOVE_BOOK,\n  payload,\n});\n\n// Reducer\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_BOOK:\n      return [...state, action.payload];\n    case REMOVE_BOOK:\n      return state.filter(book => book.id !== action.payload.id);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport { removeBook } from '../redux/books/books';\n\nconst BookActions = ({ id }) => {\n  const dispatch = useDispatch();\n\n  const handleBookRemoval = () => {\n    dispatch(removeBook({ id }));\n  };\n\n  return (\n    <div className=\"book-actions\">\n      <a href=\"/#\">Comments</a>\n      {' | '}\n      <a href=\"/#\" onClick={handleBookRemoval}>Remove</a>\n      {' | '}\n      <a href=\"/#\">Edit</a>\n    </div>\n  );\n};\n\nBookActions.propTypes = ({\n  id: PropTypes.number,\n}).isRequired;\n\nexport default BookActions","import React from 'react';\n\nconst BookStatus = () => (\n  <div className=\"book-completion-status\">\n    <i />\n    <p className=\"completion-percentage\">0%</p>\n    <p>Completed</p>\n  </div>\n);\n\nexport default BookStatus;","import React from 'react';\n\nconst BookProgress = () => (\n  <div className=\"book-progress\">\n    <p>CURRENT CHAPTER</p>\n    <p className=\"book-progress-chapter\">Introduction</p>\n    <button type=\"button\">UPDATE PROGRESS</button>\n  </div>\n);\n\nexport default BookProgress;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport BookInfo from './BookInfo';\nimport BookActions from './BookActions';\nimport BookStatus from './BookStatus';\nimport BookProgress from './BookProgress';\n\nconst Book = (\n  {\n    id, title, author, category,\n  },\n) => (\n  <div className=\"book-row\">\n    <div className=\"book-first-column\">\n      <BookInfo title={title} author={author} category={category} />\n      <BookActions id={id} />\n    </div>\n    <div className=\"book-remaining-column\">\n      <BookStatus />\n      <BookProgress />\n    </div>\n  </div>\n);\n\nBook.propTypes = ({\n  id: PropTypes.number,\n  category: PropTypes.string,\n  title: PropTypes.string,\n  author: PropTypes.string,\n}).isRequired;\n\nexport default Book;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Book from '../../components/Book';\n\nconst BookStore = () => {\n  const bookStore = useSelector((store) => store.booksReducer);\n  const bookComponent = bookStore.map(\n    (book) => (\n      <Book\n        key={book.id}\n        id={book.id}\n        title={book.title}\n        author={book.author}\n        category={book.category}\n      />\n    ),\n  );\n\n  return (\n    <>\n      { bookComponent }\n    </>\n  );\n};\n\nexport default BookStore;","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDispatch } from 'react-redux';\n\nimport { addBook } from '../redux/books/books';\n\nconst AddBook = () => {\n  const [bookCategory, setBookCategory] = useState('');\n  const [bookTitle, setBookTitle] = useState('');\n  const [bookAuthor, setBookAuthor] = useState('');\n\n  const handleBookCategoryChange = (e) => {\n    setBookCategory(e.target.value);\n  };\n\n  const handleBookTitleChange = (e) => {\n    setBookTitle(e.target.value);\n  };\n\n  const handleBookAuthorChange = (e) => {\n    setBookAuthor(e.target.value);\n  };\n\n  const dispatch = useDispatch();\n\n  const submitBookToStore = (e) => {\n    e.preventDefault();\n\n    const newBook = {\n      id: uuidv4(),\n      category: bookCategory,\n      title: bookTitle,\n      author: bookAuthor,\n    };\n\n    dispatch(addBook(newBook));\n    setBookCategory('');\n    setBookTitle('');\n    setBookAuthor('');\n  };\n\n  return (\n    <>\n      <h2>ADD NEW BOOK</h2>\n      <form onSubmit={submitBookToStore} className=\"add-book-form\">\n        <input\n          name=\"title\"\n          className=\"title-input\"\n          placeholder=\"Book title\"\n          value={bookTitle}\n          onChange={handleBookTitleChange}\n        />\n        <input\n          name=\"author\"\n          className=\"author-input\"\n          placeholder=\"Book author\"\n          value={bookAuthor}\n          onChange={handleBookAuthorChange}\n        />\n        <select\n          className=\"category-select\"\n          name=\"category\"\n          id=\"categories\"\n          value={bookCategory}\n          onChange={handleBookCategoryChange}\n        >\n          <option defaultValue=\"\">Category</option>\n          <option value=\"action\">Action</option>\n          <option value=\"science-fiction\">Science Fiction</option>\n          <option value=\"economy\">Economy</option>\n        </select>\n        <input className=\"add-book-button\" type=\"submit\" value=\"ADD BOOK\" />\n      </form>\n    </>\n  );\n};\n\nexport default AddBook;","import React from 'react';\n\nconst BookCategories = () => (\n  <h1 className=\"Cat\">Under construction</h1>\n);\n\nexport default BookCategories;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport booksReducer from './books/books';\n\nconst reducer = combineReducers({\n  booksReducer,\n});\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(logger),\n);\n\nexport default store;","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport NavBar from './features/components/NavBar';\nimport BookStore from './features/redux/books/bookStore';\nimport AddBook from './features/components/AddBook';\nimport BookCategories from './features/components/BookCategories';\nimport store from './features/redux/configureStore';\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\">\n          <BookStore />\n          <AddBook />\n        </Route>\n        <Route path=\"/categories\">\n          <BookCategories />\n        </Route>\n      </Switch>\n    </Router>\n  </Provider>\n);\n\nexport default App;","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}